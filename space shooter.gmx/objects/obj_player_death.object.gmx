<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_gmo_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initializing variables

if (global.mute == false) audio_play_sound(snd_hit_cs,3,false);

currentFrame[0] = spr_player_gmo_1;
currentFrame[1] = spr_player_gmo_2;
currentFrame[2] = spr_player_gmo_3;
currentFrame[3] = spr_player_gmo_5;
currentFrameNum = 0;

TitleY = (view_hport[0]/2)-48;

fadeRect = 0;
fadeRectTextTimer = 60;
textFade = 1;
button1Colour = c_white;
button2Colour = c_white;

// text stuff
count = 0;
currentChar = "";
message = "game over#you died";
messageNormal = "game over#you died";
str = "";
textSpeed = 0;
textShowTimer = 50;

cause = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step event

if (currentFrameNum &lt; array_length_1d(currentFrame)-1) {
    currentFrameNum += 0.05;
} else {
    currentFrameNum = array_length_1d(currentFrame)-1;
}

sprite_index = currentFrame[floor(currentFrameNum)];

// checking if fade exists
if (instance_exists(obj_fade)) {
    image_alpha -= 0.01;
}

if (fadeRect &gt;= 1) {
    if (room == rm_cutscene) {
        room_goto(rm_main);
    }
}

if (fadeRect &lt; 1) {
    fadeRect += 0.01;
} else {
    if (cause == "restart") {
        room_goto(rm_variables);
    }
    if (cause == "menu") {
        room_goto(rm_menu);
    }

    if (fadeRectTextTimer &gt; 0) {
        fadeRectTextTimer -= 1;
    }

    if (str != messageNormal) {
        textSpeed += 1.5;
        if (textSpeed &gt; 15) {
            textSpeed = 0;
        }
    } else {
        if (textShowTimer &gt; 0) {
            textShowTimer -= 1;
        }
    }
}
if (instance_exists(obj_fade)) {
    textFade -= 0.015;
}

/* making buttons clickable */

if (str == messageNormal) &amp;&amp; (textShowTimer == 0) {

    /* restart button */
    if ((mouse_x &gt; 260) &amp;&amp; (mouse_x &lt; 370)) &amp;&amp; ((mouse_y &lt; 245) &amp;&amp; (mouse_y &gt; 220)) {
        button1Colour = c_red;
    } else {
        button1Colour = c_white;
    }
    
    /* menu button */
    if ((mouse_x &gt; 280) &amp;&amp; (mouse_x &lt; 350)) &amp;&amp; ((mouse_y &gt; 250) &amp;&amp; (mouse_y &lt; 275)) {
        button2Colour = c_red;
    } else {
        button2Colour = c_white;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (button1Colour == c_red) {
    audio_play_sound(snd_select,3,false);
    if (instance_number(obj_fade) &lt; 1) {
        fade = instance_create(0,0,obj_fade);
        fade.roomTo = rm_variables;
    }
}

if (button2Colour == c_red) {
    audio_play_sound(snd_select,3,false);
    if (instance_number(obj_fade) &lt; 1) {
        fade = instance_create(0,0,obj_fade);
        fade.roomTo = rm_title;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing stuff

display_set_gui_size(surface_get_width(application_surface), surface_get_height(application_surface));

// drawing rectangle
draw_set_alpha(fadeRect);
draw_set_colour(c_black);
draw_rectangle(0,0,view_wport[0],view_hport[0],false);

draw_set_alpha(textFade);
draw_set_colour(c_white);

if (room != rm_cutscene) {
    // adding to text
    if (fadeRect == 1) &amp;&amp; (fadeRectTextTimer == 0) {
        if (string_length(str) &lt; string_length(message)) {
            if (textSpeed == 0) {
                currentChar = string_char_at(message, count);
                if (count &gt; 1) {
                    str = str+currentChar;
                } else {
                    str = currentChar;
                }
                count += 1;
            }
            //show_debug_message(string(currentChar)+" --- "+string(count));
        } else {
            str = messageNormal;
        }
    }
    
    // draw the text
    draw_set_font(fnt_main);
    draw_set_halign(fa_center);
    var text = message;
    var wantSize = 32; // height of text I want
    var currSize = string_height(text);
    var scale = wantSize / currSize;
    draw_set_colour(c_white);
    draw_text_transformed(view_wport[0]/2, TitleY, str, scale, scale, 0);
    
    // buttons
    var text2 = "restart";
    var text3 = "menu";
    var wantSize2 = 8; // height of text I want
    var currSize2 = string_height(text2);
    var scale2 = wantSize2 / currSize2;
    var currSize3 = string_height(text3);
    var scale3 = wantSize2 / currSize3;
    
    if (str == messageNormal) &amp;&amp; (textShowTimer == 0) {
        draw_set_halign(fa_center);
        draw_set_colour(button1Colour);
        draw_text_transformed(view_wport[0]/2, TitleY+42, text2, scale2, scale2, 0);
        draw_set_colour(button2Colour);
        draw_text_transformed(view_wport[0]/2, TitleY+58, text3, scale3, scale3, 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self_3d_player();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

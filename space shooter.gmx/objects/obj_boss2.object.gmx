<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss2_0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>frame[0] = spr_boss2_0;
frame[1] = spr_boss2_1;
frame[2] = spr_boss2_2;
frame[3] = spr_boss2_1;
frame[4] = spr_boss2_0;
frame[5] = spr_boss2_3;
frame[6] = spr_boss2_4;
frame[7] = spr_boss2_3;

frameNorm[0] = spr_boss2_gun_1;
frameNorm[1] = spr_boss2_gun_2;
frameNorm[2] = spr_boss2_gun_3;
frameNorm[3] = spr_boss2_gun_2;
frameNorm[4] = spr_boss2_gun_1;
frameNorm[5] = spr_boss2_gun_4;
frameNorm[6] = spr_boss2_gun_5;
frameNorm[7] = spr_boss2_gun_4;

frameNum = 0;
walking = false;

mode = 1; // picking point to move to
posGotoX = 0;
posGotoY = 0;
pointPicked = false;
pickPuddle = 0;
currentPuddle = 0;
staticCounter = 0;

shootReps = 4;
shootTimer = 50;

hit = false;
hitCountdown = 0;

global.boss2health = 50; // default is 50

if (global.bossDone[1] &gt; 0) {
    instance_destroy();
}

// getting puddle coordinates
puddleX[0] = 104;
puddleY[0] = 104;
puddleX[1] = 104;
puddleY[1] = 376;
puddleX[2] = 536;
puddleY[2] = 96;
puddleX[3] = 536;
puddleY[3] = 376;
closestPuddle = 0;
puddlePicked = false;
puddleStep = false;
puddleStepNum = 0;

x = room_width/2;
y = room_height/2;

MoveAI = false;
direction = 270;
image_angle = 270;
alarm[0] = 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_door)) {
    obj_door.wayAnimation = "backwards";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MoveAI = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scr_turn_object_3d();
if (MoveAI == true) &amp;&amp; (global.paused == false) {
    scr_boss2_ai();
}

// checking if paused
if (global.paused == true) {
    speed = 0;
    walking = false;
}

//scr_temp_boss2();

if (walking == true) {
    
    if (global.boss2health &gt; 0) {
        frameNum += 0.5;
    
        if (frameNum &gt; array_length_1d(frame)-1) {
            frameNum = 0;
        }
    
        sprite_index = frame[floor(frameNum)];
    } else {
        frameNum += 0.5;
    
        if (frameNum &gt; array_length_1d(frameNorm)-1) {
            frameNum = 0;
        }
    
        sprite_index = frameNorm[floor(frameNum)];
    }
}

if (hit == true) {
    hitCountdown += 1;
    
    if (hitCountdown &gt;= 10) {
        hitCountdown = 0;
        hit = false;
    }
}

if (global.boss2health &lt;= 0) {
    global.boss[1] = true;
    global.bossDone[1] += 1;
}

if (instance_exists(obj_fade)) {
    depth = 98;
}

// making footprints
if (puddleStep == true) {
    if (puddleStepNum &lt; 200) {
        puddleStepNum += 1;
    } else {
        puddleStepNum = 0;
        puddleStep = false;
    }
    
    if (speed &gt; 0) {
        randomize();
        var num = irandom_range(0,10);
        if (num &gt; 9) {
            particle = instance_create(x,y,obj_particle);
            particle.image_angle = image_angle;
            particle.particleFrom = "puddleBoss";
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_player)) {
    if (other.objectFrom == obj_player) {
        if (global.boss2health == 1) {
            if (instance_number(obj_gun_display) &lt; 1) {
                gun = instance_create(x,y,obj_gun_display);
                gun.image_angle = -10;
            }
            hit = true;
            global.boss2health = 0;
        }
    
        if (global.boss2health &gt; 0) {
            if (global.mute == false) audio_play_sound(snd_hit2,2,false);
            hit = true;
            global.boss2health -= 1;
        } else {
            hit = instance_create(other.x + lengthdir_x(2,other.image_angle),other.y + lengthdir_y(2,other.image_angle),obj_bullet_hit);
            hit.image_angle = other.image_angle;
        }
        with (other) instance_destroy();
    }
} else {
    hit = instance_create(other.x + lengthdir_x(2,other.image_angle),other.y + lengthdir_y(2,other.image_angle),obj_bullet_hit);
    hit.image_angle = other.image_angle;
    with (other) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.boss2health &gt; 0) {
    // creating death animation
    anim = instance_create(x,y,obj_player_death);
    anim.image_angle = image_angle;
    anim.direction = direction;
    anim.depth = depth;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self_3d();

if (hit == true) {
    for (var _i=0; _i&lt;image_number; _i++) {
        draw_sprite_ext(sprite_index, _i, x, y-_i, image_xscale, image_yscale, image_angle, c_red, image_alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

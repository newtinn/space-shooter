<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialising variables

currentFrame[0] = spr_player_0;
currentFrame[1] = spr_player_1;
currentFrame[2] = spr_player_2;
currentFrame[3] = spr_player_1;
currentFrame[4] = spr_player_0;
currentFrame[5] = spr_player_3;
currentFrame[6] = spr_player_4;
currentFrame[7] = spr_player_3;
currentFrameNum = 0;
currentFrameSpeed = 0.35;

spd = 2;

inCorner = false;
cornerSide = "";

puddleStep = false;
puddleStepNum = 0;

scr_player_onload_room();

// pausing
global.paused = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inCorner = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step event

if (global.paused == false) {
    direction = point_direction(x,y,mouse_x,mouse_y);
    image_angle = direction;
}

if (distance_to_point(mouse_x,mouse_y) &gt; 5) &amp;&amp; (global.paused == false) {
    if (keyboard_check(ord('W'))) {
        if (puddleStep == true) {
            randomize();
            var num = irandom_range(0,10);
            if (num &gt; 9) {
                particle = instance_create(x,y,obj_particle);
                particle.image_angle = image_angle;
                particle.particleFrom = "puddle";
            }
        }
        speed = spd;
        currentFrameNum += currentFrameSpeed;
    } else {
        speed = 0;
        currentFrameNum = 0;
    }
} else {
    speed = 0;
    currentFrameNum = 0;
}
    
if (currentFrameNum &gt;= array_length_1d(currentFrame)) {
    currentFrameNum = 0;
}

sprite_index = currentFrame[currentFrameNum];

// collisions
scr_player_collisions();

if (room == rm_boss1) {
    scr_player_boss1();
}

// making footprints
if (puddleStep == true) {
    if (puddleStepNum &lt; 200) {
        puddleStepNum += 1;
    } else {
        puddleStepNum = 0;
        puddleStep = false;
    }
}

// changing colours
//scr_player_colour();

// pausing
scr_player_pause();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boss1_col">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// creating death animation
anim = instance_create(x,y,obj_player_death);
anim.image_angle = image_angle;
anim.direction = direction;
anim.depth = depth;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.prevroom = room;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(surface_get_width(application_surface), surface_get_height(application_surface));

if (instance_exists(obj_boss1)) {
    draw_set_font(fnt_main);
    draw_set_colour(c_white);
    draw_set_halign(fa_left);
    //draw_text(8,8,);
    var text="SNAIL HEALTH: "+string(global.boss1health);
    var wantSize = 11; // height of text I want
    var currSize = string_height(text);
    var scale = wantSize / currSize;
    draw_text_transformed(4, 4, text, scale, scale, 0);
}

if (instance_exists(obj_boss2)) {
    draw_set_font(fnt_main);
    draw_set_colour(c_white);
    draw_set_halign(fa_left);
    //draw_text(8,8,);
    var text="BOSS HEALTH: "+string(global.boss2health);
    var wantSize = 11; // height of text I want
    var currSize = string_height(text);
    var scale = wantSize / currSize;
    draw_text_transformed(4, 4, text, scale, scale, 0);
}

if (instance_exists(obj_boss3)) {
    draw_set_font(fnt_main);
    draw_set_colour(c_white);
    draw_set_halign(fa_left);
    //draw_text(8,8,);
    var text="BOSS HEALTH: "+string(global.boss3health);
    var wantSize = 11; // height of text I want
    var currSize = string_height(text);
    var scale = wantSize / currSize;
    draw_text_transformed(4, 4, text, scale, scale, 0);
}

// checking if paused
if (global.paused == true) {
    draw_set_alpha(0.5);
    draw_rectangle_colour(0,0,view_wport[0],view_hport[0],c_black,c_black,c_black,c_black,false);
    draw_set_alpha(1);
    draw_set_font(fnt_main);
    draw_set_colour(c_white);
    draw_set_halign(fa_center);
    var text="paused";
    var wantSize = 24; // height of text I want
    var currSize = string_height(text);
    var scale = wantSize / currSize;
    draw_text_transformed(view_wport[0]/2, (view_hport[0]/2)-32, text, scale, scale, 0);
    
    draw_set_font(fnt_main);
    draw_set_colour(c_white);
    draw_set_halign(fa_center);
    var text="Back to game";
    var text2="Restart";
    var text3="Menu";
    var wantSize = 8; // height of text I want
    var currSize = string_height(text);
    var scale = wantSize / currSize;
    draw_text_transformed(view_wport[0]/2, (view_hport[0]/2), text, scale, scale, 0);
    draw_text_transformed(view_wport[0]/2, (view_hport[0]/2)+12, text2, scale, scale, 0);
    draw_text_transformed(view_wport[0]/2, (view_hport[0]/2)+24, text3, scale, scale, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self_3d_player();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

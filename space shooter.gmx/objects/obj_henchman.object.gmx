<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend = make_colour_rgb(134,249,200);

origX = x;
origY = y;
moveDirection = 0; // up then back down

hit = false;
hitTimer = 0;

hp = 3;

mode = 0; // still
modeTimer = -20;

spd = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_player)) {
    direction = point_direction(x,y,obj_player.x,obj_player.y);
    image_angle = direction;
}

if (hit == true) {
    image_blend = c_red;
    hitTimer += 1;
    if (hitTimer &gt; 5) {
        hit = false;
    }
} else {
    image_blend = make_colour_rgb(134,249,200);
    hitTimer = 0;
}

if (hp &lt;= 0) {
    dead = instance_create(x,y,obj_henchman_dead);
    dead.image_angle = image_angle;
    instance_destroy();
}


// changing the state of this enemy
if (global.paused == false) {
    if (instance_exists(obj_player)) {
        modeTimer += 1;
    } else {
        moveTimer = 0;
        speed = 0;
        spd = 0;
    }
    
    if (instance_exists(obj_player)) {
        if (obj_player.x &gt; x) {
            if (modeTimer &lt; 20 &amp;&amp; modeTimer &gt;= 0) {
                // moving up
                if (moveDirection == 0) {
                    y -= spd;
                }
                if (moveDirection == 1) {
                    y += spd;
                }
            }
            
            if (modeTimer &gt; 260 &amp;&amp; modeTimer &lt; 280) {
                if (moveDirection == 0) {
                    y += spd;
                }
                if (moveDirection == 1) {
                    y -= spd;
                }
            }
        }
    }
    if (modeTimer &gt;= 20 &amp;&amp; modeTimer &lt;= 260) {
        // shoot
        if (modeTimer == 100) {
            scr_final_boss();   
        }
        if (modeTimer == 180) {
            scr_final_boss();
        }
        if (modeTimer == 260) {
            scr_final_boss();
        }
    }
    
    if (modeTimer &gt;= 320) {
        if (instance_exists(obj_player)) {
            if (obj_player.y &gt; y) {
                moveDirection = 1;
            }
            if (obj_player.y &lt; y) {
                moveDirection = 0;
            }   
        }
    
        modeTimer = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.objectFrom == obj_player) {
    hit = true;
    hp -= 1;
    with (other) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_player)) {
    if (obj_player.y &lt; y) {
        for (var _i=0; _i&lt;9; _i++) {
            draw_sprite_ext(spr_gun, _i, x + lengthdir_x(8, image_angle), (y + lengthdir_y(8, image_angle))-6-_i, image_xscale, image_yscale, image_angle, c_white, image_alpha);
        }
    }
}

draw_self_3d();



if (instance_exists(obj_player)) {
    if (obj_player.y &gt; y) {
        for (var _i=0; _i&lt;9; _i++) {
            draw_sprite_ext(spr_gun, _i, x + lengthdir_x(8, image_angle), (y + lengthdir_y(8, image_angle))-6-_i, image_xscale, image_yscale, image_angle, c_white, image_alpha);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.playerColour[global.myColour] != c_black) {
    image_blend = global.playerColour[global.myColour];
} else {
    image_index = 1;
}

randomize();
pointX = -128;
pointY = irandom_range(32,room_height-32);

off = false;

fadeText = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

if (x &gt; -64) {
    direction = point_direction(x,y,-128,pointY);
    image_angle = direction;
    speed = 1.5;
} else {
    x = -64;
    speed = 0;
}
if (x &lt; 64) {
    off = true;
    
    //show_debug_message("X: "+string(mouse_x)+ ", Y: " + string(mouse_y));
}

if (fadeText == true) {
    image_alpha -= 0.009;
    draw_set_alpha(image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((mouse_x &gt;= 290 &amp;&amp; mouse_x &lt;= 342) &amp;&amp; (mouse_y &gt;= 216 &amp;&amp; mouse_y &lt;= 228)) {
    audio_play_sound(snd_select,3,false);
    room_goto(rm_menu);
}

if ((mouse_x &gt;= 252 &amp;&amp; mouse_x &lt;= 378) &amp;&amp; (mouse_y &gt;= 240 &amp;&amp; mouse_y &lt;= 252)) {
    audio_play_sound(snd_select,3,false);
    if (instance_number(obj_fade) &lt; 1) {    
        fade = instance_create(0,0,obj_fade);
        fade.roomTo = rm_variables;
        fade.fadeType = "in";
        fadeText = true;
        depth = 100000000000;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(surface_get_width(application_surface), surface_get_height(application_surface));

if (off == true) {
    draw_set_font(fnt_main);
    draw_set_colour(c_white);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    //draw_text(8,8,);
    var text="THE END";
    var text1="YOU FINISHED IN " + string(global.timer) + " SECONDS";
    var wantSize = 14; // height of text I want
    var wantSize2 = 6;
    var currSize = string_height(text);
    var currSize2 = string_height(text1);
    var scale = wantSize / currSize;
    var scale2 = wantSize2 / currSize2;
    draw_text_transformed(view_wport[0]/2, (view_hport[0]/2)-32, text, scale, scale, 0);
    draw_text_transformed(view_wport[0]/2, (view_hport[0]/2)-20, text1, scale2, scale2, 0);
    
    var text="MENU";
    var wantSize = 8; // height of text I want
    var currSize = string_height(text);
    var scale = wantSize / currSize;
    if ((mouse_x &gt;= 290 &amp;&amp; mouse_x &lt;= 342) &amp;&amp; (mouse_y &gt;= 216 &amp;&amp; mouse_y &lt;= 228)) {
        draw_set_colour(c_red);
        draw_text_transformed(view_wport[0]/2, (view_hport[0]/2)-8, text, scale, scale, 0);
    } else {
        draw_set_colour(c_white);
        draw_text_transformed(view_wport[0]/2, (view_hport[0]/2)-8, text, scale, scale, 0);
    }
    
    var text="PLAY AGAIN";
    var wantSize = 8; // height of text I want
    var currSize = string_height(text);
    var scale = wantSize / currSize;
    if ((mouse_x &gt;= 252 &amp;&amp; mouse_x &lt;= 378) &amp;&amp; (mouse_y &gt;= 240 &amp;&amp; mouse_y &lt;= 252)) {
        draw_set_colour(c_red);
        draw_text_transformed(view_wport[0]/2, (view_hport[0]/2)+4, text, scale, scale, 0);
    } else {
        draw_set_colour(c_white);
        draw_text_transformed(view_wport[0]/2, (view_hport[0]/2)+4, text, scale, scale, 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
